{"version":3,"sources":["components/Container.jsx","pages/Index.jsx","stores/actions.js","stores/tokenTransactions.js","services/payments.js","constants/abis.js","components/WalletConnectRequiredModal.jsx","Responsive.js","AppLayout.jsx","styles.js","components/TransactionsWidget.jsx","constants/appData.js","StoreBridge.js","pages/TransactionsScreen.jsx","components/TransferTokenForm.jsx","components/TransferWidget.jsx","pages/TransferScreen.jsx","appRoutes.js","AppRouter.jsx","stores/reducers.js","stores/sagas.js","stores/store.js","App.js","index.js"],"names":["children","style","fluid","otherProps","fluidStyle","paddingLeft","paddingRight","height","background","position","Layout","Header","Content","SET_LOADING_TRX","SET_LOADING","SET_CONNECTED","SET_WALLET","FETCH_WALLET_BALANCE","APPEND_TRX","setWallet","wallet","type","payload","createTokenTransactionsStore","transactions","loadingTrx","loadingAddress","connected","balance","address","this","getConnected","setConnected","state","getLoadingTrx","setLoadingTrx","status","getWallet","addTrxn","trx","deleteTrx","id","filter","index","TransactionStoreContext","createContext","useTransactionsStore","dispatch","useDispatch","useSelector","SetWallet","setLoading","loading","getLoading","fetchWalletBalance","FetchWalletBalance","addTrx","appendTrx","TransactionStoreProvider","store","useLocalStore","Provider","value","BEP20","appToken","ERC20Abi","safeRequest","chain","callback","a","switchEthChain","chainId","window","ethereum","request","method","params","code","chainParams","chainName","rpcUrls","console","error","getContract","contractAddress","abi","enable","provider","ethers","providers","Web3Provider","contract","Contract","getSigner","payWithUSDTBEP","price","pay","transfer","utils","parseUnits","toString","wait","log","setTimeout","payWithUSDTERC","requestWalletConnection","send","response","getWalletBalance","walletAddress","token","Axios","get","data","result","modalStyle","width","display","flexDirection","alignItems","justifyContent","borderRadius","props","connectWallet","wallets","toast","useEffect","addresses","_state","accounts","removeAllListeners","on","length","fallback","onCancel","onOk","footer","title","visible","AlertFilled","marginTop","fontSize","color","onClick","isTabletOrMobile","useMediaQuery","query","isTablet","minWidth","maxWidth","isMobile","AccountDropdown","alignSelf","flex","slice","AppMenuItem","paddingTop","paddingBottom","margin","boxSizing","Component","React","memo","path","useRouteMatch","useState","activePath","useResponsive","menuStyle","overflowX","overflowY","WalletConnectRequiredModal","backgroundColor","className","to","disabledOverflow","activeKey","mode","icon","SendOutlined","size","MoneyCollectOutlined","BankOutlined","href","target","cardStyle","padding","fontFamily","boxShadow","marginBottom","generateScannerPath","trxType","hash","TransactionCard","wordWrap","from","transactionsWidgetStyle","fontWeight","map","TRX_LOCAL_STORE_KEY","localStorage","setItem","JSON","stringify","withStoreBridge","withAppLayout","Container","TransactionsWidget","radioBtnStyle","radioGrpStyle","FormItem","Form","Item","tokenOptions","label","formItemStyle","TransferTokenForm","busy","onFinish","layout","labelAlign","rules","message","required","name","placeholder","border","textAlign","initialValue","Group","defaultValue","buttonStyle","option","Button","htmlType","disabled","indicator","LoadingOutlined","spin","TransferWidget","transferWidgetStyle","handleTransaction","payment","success","handleFinish","values","amount","erc","btrx","etrx","info","transferScreenStyle","component","exact","TransactionsScreen","appRoutes","route","combineReducers","parse","getItem","action","fetchWallet","allSagas","call","putResolve","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","combinedReducers","applyMiddleware","run","App","AppRouter","rootElement","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.b5012e03.chunk.js","sourcesContent":["import { Layout } from \"antd\"\n\nexport default ({children, style, fluid=false,...otherProps}) => {\n    const fluidStyle = fluid?{paddingLeft:\"7%\", paddingRight:\"7%\"}:{paddingLeft:\"15%\", paddingRight:\"15%\"}\n    return (<Layout style={{...fluidStyle,height:\"100%\",background:\"transparent\", position:\"relative\",height:\"100vh\",...style}} {...otherProps}>\n        {children}\n    </Layout>)\n}","import { Button, Col, Layout, Row } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport Container from \"../components/Container\";\n\nconst { Header, Content } = Layout;\n\nconst style = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"\",\n    backgroundColor: \"#ffffff\",\n    position: \"relative\",\n    paddingLeft:0,\n    paddingRight:0\n}\n\nexport default (props) => {\n    return (<Layout>\n        <Header style={style}>\n            <Container>\n                <div style={style}>\n                    <h3 style={{margin:0}}>Swipe</h3>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"end\", alignSelf: \"stretch\", flex: 2 }}>\n                        <Button type=\"primary\"><NavLink to=\"/transfer\">Launch App</NavLink></Button>\n                    </div>\n                </div>\n            </Container>\n        </Header>\n        <Content>\n            <Container style={{height:\"30rem\", color:\"#fff\", backgroundColor:\"lightblue\"}}>\n                <Row style={{height:\"100%\"}}>\n                    <Col xs={24} sm={24} md={24} style={{height:\"100%\", display: \"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n                        <h1 style={{marginTop:50, fontSize:\"3em\"}}>Powering Tether payments for businesses worldwide</h1>\n                        <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.</p>\n                    </Col>\n                </Row>\n            </Container>\n            <Row>\n                <Col xs={24} sm={24} md={12}>\n\n                </Col>\n                <Col xs={24} sm={24} md={12}>\n                    \n                </Col>\n            </Row>\n        </Content>\n    </Layout>)\n}","export const SET_LOADING_TRX = \"SET_LOADING_TRX\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_CONNECTED = \"SET_CONNECTED\";\nexport const SET_WALLET = \"SET_WALLET\";\nexport const FETCH_WALLET_BALANCE = \"FETCH_WALLET_BALANCE\";\nexport const APPEND_TRX = \"APPEND_TRX\";\n\nexport const setLoadingTrx = (loadingTrx) =>{\n    return {\n        type: SET_LOADING_TRX,\n        payload:{\n            loadingTrx\n        }\n    }\n}\n\nexport const setLoading = (loading) => {\n    return {\n        type: SET_LOADING,\n        payload:{\n            loading\n        }\n    }\n}\n\nexport const setConnected = (connected) => {\n    return {\n        type: SET_CONNECTED,\n        payload:{\n            connected\n        }\n    }\n}\n\nexport const setWallet = (wallet) => {\n    return {\n        type: SET_WALLET,\n        payload:{\n            wallet\n        }\n    }\n}\n\nexport const fetchWalletBalance = (address) => {\n    return {\n        type: FETCH_WALLET_BALANCE,\n        payload:{\n            address\n        }\n    }\n}\n\nexport const appendTrx = (trx) => {\n    return {\n        type: APPEND_TRX,\n        payload:{\n            trx\n        }\n    }\n}","import { useLocalStore } from \"mobx-react\";\nimport { createContext, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n    setWallet as SetWallet,\n    setConnected as SetConnected,\n    setLoadingTrx as SetLoadingTrx,\n    setLoading as SetLoading,\n    fetchWalletBalance as FetchWalletBalance,\n    appendTrx\n} from \"../stores/actions\";\n\nconst createTokenTransactionsStore = () => ({\n\n    transactions: [],\n    loadingTrx: false,\n    loadingAddress: false,\n    connected: true,\n    wallet: {\n        balance:0,\n        address: null\n    },\n    setWallet(wallet){\n        this.wallet = {...this.wallet,...wallet};\n    },\n    getConnected(){\n        return this.connected;\n    },\n    setConnected(state){\n        this.connected = state;\n    },\n    getLoadingTrx(){\n        return this.loadingTrx;\n    },\n    setLoadingTrx(status){\n        this.loadingTrx = status;\n    },\n    getWallet(){\n        return this.wallet;\n    },\n    addTrxn(trx){\n        this.transactions = [trx,...this.transactions]\n    },\n    deleteTrx(id){\n        return this.transactions.filter((trx,index)=>index!==id?trx:null);\n    }\n    \n});\n\nconst TransactionStoreContext = createContext(null);\n\nconst TransactionStoreProvider = ({children}) => {\n    const store = useLocalStore(createTokenTransactionsStore);\n    return (<TransactionStoreContext.Provider value={store}>\n        {children}\n    </TransactionStoreContext.Provider>);\n}\n\n// export const useTransactionsStore = () => useContext(TransactionStoreContext);\n\nexport const useTransactionsStore = () => {\n\n    const dispatch = useDispatch();\n\n    const state = useSelector(state=>state.transactions);\n\n    const setWallet = (wallet) => {\n        dispatch(SetWallet(wallet));\n    }\n\n    const getConnected = () => {\n        return state.connected\n    }\n\n    const setConnected = (state) => {\n        dispatch(SetConnected(state));\n    }\n\n    const getLoadingTrx = () => {\n        return state.loadingTrx;\n    }\n\n    const setLoadingTrx = (status) => {\n        dispatch(SetLoadingTrx(status))\n    }\n\n    const getWallet = () => {\n        return state.wallet;\n    }\n\n    const setLoading = (state) => {\n        dispatch(SetLoading(state));\n    }\n\n    const getLoading = () => {\n        return state.loading;\n    }\n\n    const fetchWalletBalance = (address) => {\n        dispatch(FetchWalletBalance(address));\n    }\n\n    const addTrx = (trx) => {\n        dispatch(appendTrx(trx));\n    }\n\n    return {\n        setConnected,\n        setWallet,\n        setLoadingTrx,\n        setLoading,\n        getLoading,\n        getLoadingTrx,\n        getConnected,\n        getWallet,\n        fetchWalletBalance,\n        addTrx,\n        trx: state.transactions\n    }\n}\n\n\nexport default TransactionStoreProvider;","import { IERC20_Abi } from \"../constants/abis\";\nimport { ethers } from \"ethers\";\nimport Axios from \"axios\";\n\nexport const BEP20 = \"0x38\";\nexport const ERC20 = \"0x1\";\n// export const BEP20 = \"0x61\";\n// export const ERC20 = \"0x3\";\n\nconst appToken = \"DIC9ZAV7NZNIWF28K7KR6HZJX16HXH4Z1E\";\n\nconst USDTBEP20Address = \"0x55d398326f99059ff775485246999027b3197955\";\nconst USDTERC20Address = \"0xdac17f958d2ee523a2206206994597c13d831ec7\";\nconst TRC20CAddress = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\";\nconst BEP20Abi = IERC20_Abi;\nconst ERC20Abi = [\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"type\": \"function\"\n    }\n];\nconst safeRequest = async (chain, callback) => {\n    const switchEthChain = (chainId) => window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId }], // chainId must be in hexadecimal numbers\n    });\n\n    try {\n        // check if the chain to connect to is installed\n        await switchEthChain(chain);\n        return await callback();\n    } catch (error) {\n        if (error.code === 4902) {\n            try {\n                let chainParams = null;\n                switch (chain) {\n                    case BEP20:\n                        chainParams = {\n                            chainId: chain,\n                            chainName: \"Binance Smart Chain Mainnet\",\n                            rpcUrls: ['https://bsc-dataseed.binance.org'],\n                        };\n                        break;\n                    case ERC20:\n                        chainParams = {\n                            chainId: chain,\n                            chainName: \"Ethereum Mainnet\",\n                            rpcUrls: [\"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"]\n                        };\n                    default:\n                        break;\n                }\n                const addResponse = await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [\n                        chainParams\n                    ],\n                });\n                await switchEthChain(chain);\n                await callback();\n            } catch (addError) {\n                console.error(addError);\n            }\n        } else {\n            throw error;\n        }\n    }\n}\n\nconst getContract = async (contractAddress, abi) => {\n    await window.ethereum.enable();\n    const provider = new ethers.providers.Web3Provider((window).ethereum);\n    const contract = new ethers.Contract(contractAddress, abi, provider.getSigner());\n    return contract;\n}\n\nexport const payWithUSDTBEP = async (price, address) => {\n    let contract;\n    const pay = async () => {\n        contract = await getContract(USDTBEP20Address, BEP20Abi)\n        const trx = await contract.transfer(address, ethers.utils.parseUnits(price.toString(), \"18\"));\n        trx.wait();\n        return trx;\n    }\n    return await safeRequest(BEP20, async () => {\n        try {\n            return await pay();\n        } catch (e) {\n            console.log(e)\n            if (e.code === \"NETWORK_ERROR\") {\n                setTimeout(async () => {\n                    await pay();\n                }, 3000);\n            }else{\n                throw e;\n            }\n        }\n    })\n}\n\nexport const payWithUSDTERC = async (price, address) => {\n    let contract;\n    const pay = async () => {\n        contract = await getContract(USDTERC20Address, ERC20Abi);\n        const trx = await contract.transfer(address, ethers.utils.parseUnits(price.toString(), \"6\"));\n        trx.wait();\n        return trx;\n    }\n    return await safeRequest(ERC20, async () => {\n        try {\n            return await pay();\n        } catch (e) {\n            if (e.code === \"NETWORK_ERROR\") {\n                setTimeout(async () => {\n                    await pay();\n                }, 3000);\n            }else{\n                throw e;\n            }\n        }\n    })\n}\n\nexport const payWithUSDTTRC = async (price, address) => {\n    try {\n        if (!tronWeb) {\n            alert(\"You need to install TronLink to use this feature.\");\n            throw Error(\"TRONLINK_NULL\");\n        }\n        if (tronWeb.fullNode.host !== \"https://api.trongrid.io\") {\n            alert(\"TronLink network must be TronGrid Mainnet to use this feature.\");\n            throw Error(\"TRONGRID_NET_NOT_SELECTED\");\n        }\n        const contract = await tronWeb.contract().at(TRC20CAddress);\n        try {\n            const response = await contract.transfer(address, ethers.utils.parseUnits(price.toString(), \"6\")).send();\n            return response;\n        } catch (e) {\n            throw e;\n        }\n    } catch (e) {\n        throw e;\n    }\n}\n\nexport const requestWalletConnection = async() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const response = await provider.send(\"eth_requestAccounts\", []);\n    return response;\n}\n\nexport const getWalletBalance = async (walletAddress, token=appToken) => {\n    const response = await Axios.get(`https://api.etherscan.io/api?module=account&action=balance&address=${walletAddress}&tag=latest&apikey=${token}`);\n    return response.data.result;\n}","export const IERC20_Abi = `[\n    {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n    },\n    {\n    \"anonymous\": false,\n    \"inputs\": [\n    {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n    },\n    {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"spender\",\n    \"type\": \"address\"\n    },\n    {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"value\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n    },\n    {\n    \"anonymous\": false,\n    \"inputs\": [\n    {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"previousOwner\",\n    \"type\": \"address\"\n    },\n    {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n    }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n    },\n    {\n    \"anonymous\": false,\n    \"inputs\": [\n    {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n    },\n    {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n    },\n    {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"value\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"_decimals\",\n    \"outputs\": [\n    {\n    \"internalType\": \"uint8\",\n    \"name\": \"\",\n    \"type\": \"uint8\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"_name\",\n    \"outputs\": [\n    {\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"_symbol\",\n    \"outputs\": [\n    {\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n    },\n    {\n    \"internalType\": \"address\",\n    \"name\": \"spender\",\n    \"type\": \"address\"\n    }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"spender\",\n    \"type\": \"address\"\n    },\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n    {\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"account\",\n    \"type\": \"address\"\n    }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"burn\",\n    \"outputs\": [\n    {\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n    {\n    \"internalType\": \"uint8\",\n    \"name\": \"\",\n    \"type\": \"uint8\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"spender\",\n    \"type\": \"address\"\n    },\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"subtractedValue\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"decreaseAllowance\",\n    \"outputs\": [\n    {\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getOwner\",\n    \"outputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"spender\",\n    \"type\": \"address\"\n    },\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"addedValue\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"increaseAllowance\",\n    \"outputs\": [\n    {\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n    {\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n    {\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n    {\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"recipient\",\n    \"type\": \"address\"\n    },\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n    {\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"sender\",\n    \"type\": \"address\"\n    },\n    {\n    \"internalType\": \"address\",\n    \"name\": \"recipient\",\n    \"type\": \"address\"\n    },\n    {\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n    }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n    {\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n    }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    },\n    {\n    \"constant\": false,\n    \"inputs\": [\n    {\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n    }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n    }\n    ]`","import { AlertFilled } from \"@ant-design/icons\";\nimport { Button, Modal, Spin } from \"antd\";\nimport { toast } from \"react-toastify\";\nimport {Suspense, useState, useEffect} from \"react\"\nimport { requestWalletConnection } from \"../services/payments\";\nimport { useTransactionsStore } from \"../stores/tokenTransactions\";\n\nconst modalStyle = { \n    width: \"60%\", \n    height: \"60%\", \n    display: \"flex\", \n    flexDirection: \"column\", \n    alignItems: \"center\", \n    justifyContent: \"center\",\n    borderRadius: \"10px\"\n};\n\nexport default (props) => {\n    const store = useTransactionsStore();\n\n    const connectWallet = async() =>{\n        try{\n            const wallets = await requestWalletConnection();\n            if(wallets){\n                store.setWallet({address: wallets[0]});\n            }\n        }catch(e){\n            toast.error(\"Wallet connection failed.\",{position:\"top-center\"});\n        }\n    }\n\n    const persistWalletBalance = async() => {\n        if(store.getWallet().address!=null){\n            try{\n                const balance = await getWalletBalance(store.getWallet().address)\n                store.setWallet({balance});\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    useEffect(()=>{\n        setTimeout(()=>{\n            const addresses = window.ethereum._state.accounts;\n            store.setConnected(addresses>0);\n            if(addresses>0){\n                store.setWallet({address: addresses[0]});\n                store.fetchWalletBalance(addresses[0]);\n            }\n        },1000)\n\n    },[]);\n\n    useEffect(()=>{\n        return () => {\n            window.ethereum.removeAllListeners();\n        }\n    },[])\n\n    window.ethereum.on('accountsChanged', (accounts) =>{\n        if(accounts.length > 0){\n            store.setConnected(true)\n        }else{\n            store.setConnected(false);\n        }\n    });\n\n    \n    return (\n        <Suspense fallback={<Spin/>}>\n        <Modal onCancel={null} onOk={null} footer={null} title=\"Attention\" style={modalStyle} visible={!store.getConnected()}>\n            <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\"}}>\n                <AlertFilled style={{marginTop:40}} style={{fontSize:\"2em\", color:\"red\"}} size={100}/>\n                <h4 style={{marginTop:20}}>Wallet Connection required!</h4>\n                <Button type=\"primary\" style={{marginTop:40}} onClick={connectWallet}>Connect Wallet</Button>\n            </div>\n        </Modal>\n        </Suspense>\n    )\n}","import {useMediaQuery} from \"react-responsive\";\nexport default () => {\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n    return {\n        isTabletOrMobile,\n        isTablet,\n        isMobile\n    }\n}","import { BankOutlined, CaretDownOutlined, MoneyCollectOutlined, ReloadOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { Button, Dropdown, Layout, Menu } from \"antd\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\nimport React,{ useEffect, useState } from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport { useTransactionsStore } from \"./stores/tokenTransactions\";\nimport WalletConnectRequiredModal from \"./components/WalletConnectRequiredModal\";\nimport DropdownButton from \"antd/lib/dropdown/dropdown-button\";\nimport useResponsive from \"./Responsive\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\n\n\nconst { Content, Header } = Layout;\n\nconst AccountDropdown = (props) =>{\n\n    const store = useTransactionsStore();\n\n    const wallet = store.getWallet();\n\n    const connected = store.getConnected();\n\n    return (\n        <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\", justifyContent:\"end\", alignSelf:\"stretch\", flex:2}}>\n            <ButtonGroup>\n                <Button type=\"primary\">\n                    {store.getWallet().address?(store.getWallet().address?.slice(0,6)+\"...\"):\"N/A\"}\n                </Button>\n                <Button type=\"danger\">\n                    <span>{`$${wallet.balance??\"...\"}`}</span>\n                </Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nconst AppMenuItem = ({children,...otherProps}) => {\n    return (\n        <MenuItem style={{height:40, paddingTop:0, paddingBottom:0, margin:0, boxSizing:\"content-box\"}} {...otherProps}>\n            {children}\n        </MenuItem>\n    )\n}\n\nexport default (Component) => {\n\n    return React.memo((props) => {\n\n        const { path } = useRouteMatch();\n\n        const [activePath, setActivePath] = useState(path);\n\n        const store = useTransactionsStore();\n    \n        useEffect(()=>{\n\n        },[])\n\n        const {isTabletOrMobile, isTablet, isMobile} = useResponsive();\n\n        const menuStyle = { \n            display: \"flex\", \n            flexDirection: \"row\", \n            justifyContent: isMobile?\"flex-start\":\"center\", \n            overflowX: \"scroll\",\n            overflowY: \"hidden\",\n            paddingLeft: 0\n        };\n        \n        const headerStyle = { backgroundColor: \"#303e52\", position: \"relative\", display:\"flex\", flexDirection:\"row\" };\n\n        return (<Layout>\n            <WalletConnectRequiredModal/>\n            <Header style={headerStyle}>\n                <div className=\"logo\">\n                    <h1><NavLink to=\"/\">Swipe</NavLink></h1>\n                </div>\n                {store.getConnected()?<AccountDropdown/>:null}\n            </Header>\n            <Menu \n                    disabledOverflow={true}\n                    style={menuStyle}\n                    activeKey={activePath}\n                    mode=\"horizontal\">\n                    {/* <MenuItem title=\"Home\" key={\"/\"}>\n                        <NavLink>\n                            Home\n                        </NavLink>\n                    </MenuItem> */}\n                    <AppMenuItem icon={<SendOutlined size={30}/>} title=\"Home\" key={\"/transfer\"}>\n                        <NavLink to={\"/transfer\"}>\n                            Transfer\n                        </NavLink>\n                    </AppMenuItem>\n                    <AppMenuItem icon={<MoneyCollectOutlined size={30}/>} title=\"Transactions\" key={\"/transactions\"}>\n                        <NavLink to=\"/transactions\">\n                            Transactions\n                        </NavLink>\n                    </AppMenuItem>\n                    <AppMenuItem icon={<BankOutlined size={30}/>} title=\"Exchange\" key={\"/exchange\"}>\n                        <a href=\"https://uniswap.com\" target={\"_blank\"}>\n                            Exchange\n                        </a>\n                    </AppMenuItem>\n                </Menu>\n            <Content style={{position:\"relative\"}}>\n                <Component {...props} />\n            </Content>\n\n        </Layout>);\n    })\n}","export const cardStyle = { \n    width: \"40%\", \n    minWidth: \"400px\", \n    padding: 16, \n    borderRadius: 8, \n    backgroundColor: \"#ffffff\",\n    fontFamily: `'Kanit', sans-serif`,\n    boxShadow: \"0px 1px 1px 1px #CCCCCC\"\n};","import { Card } from \"antd\";\nimport { useTransactionsStore } from \"../stores/tokenTransactions\";\nimport { cardStyle } from \"../styles\";\nimport useResponsive from \"../Responsive\";\n\nconst style = {...cardStyle, height:\"100%\", marginBottom:\"15%\", overflowY:\"scroll\"};\n\nconst generateScannerPath = (trx) => {\n    switch(trx.trxType){\n        case \"bep20\": \n            return `https://bscscan.com/tx/${trx.hash}`;\n\n        case \"erc20\":\n            return `https://etherscan.io/tx/${trx.hash}`;\n\n        default:\n            return \"#\";\n    }\n}\n\nconst TransactionCard = ({trx}) => {\n    return <Card style={{fontSize:\"0.8em\"}}>\n        <p style={{wordWrap:\"break-word\"}}><strong>Transaction Id:</strong> &nbsp;{trx.hash}</p>\n        <p style={{wordWrap:\"break-word\"}}><strong>From:</strong> &nbsp;{trx.from}</p>\n        <p style={{wordWrap:\"break-word\"}}><strong>To:</strong> &nbsp;{trx.to}</p>\n        <a target={\"_blank\"} href={generateScannerPath(trx)}>View details</a>\n    </Card>\n}\n\nexport default (props) => {\n    const store = useTransactionsStore();\n    const {isTabletOrMobile} = useResponsive();\n    const transactionsWidgetStyle = isTabletOrMobile?{...style, minWidth:\"100%\"} :style;\n    return (\n        <div style={transactionsWidgetStyle}>\n            <h3 style={{ margin: 0, fontWeight: \"bolder\" }}>Transactions</h3>\n            <p style={{ color: \"#666666\" }}>View recent USDT transactions</p>\n            <div style={{marginTop: 20}}>\n                {store.trx.map((trx) => <TransactionCard trx={trx}/>)}\n            </div>\n        </div>\n    )\n}","export const TRX_LOCAL_STORE_KEY=\"swipeXTrx\";","import { useEffect } from \"react\"\nimport { TRX_LOCAL_STORE_KEY } from \"./constants/appData\"\nimport { useTransactionsStore } from \"./stores/tokenTransactions\"\n\nexport default (Component) => {\n    return (props) => {\n        const store = useTransactionsStore()\n        useEffect(()=>{\n            localStorage.setItem(TRX_LOCAL_STORE_KEY,JSON.stringify(store.trx));\n        },[store.trx]);\n        return (<Component  {...props}/>)\n    }\n}","import Container from \"../components/Container\";\nimport withAppLayout from \"../AppLayout\";\nimport TransactionsWidget from \"../components/TransactionsWidget\";\nimport withStoreBridge from \"../StoreBridge\";\n\nconst style = { \n    display: \"flex\", \n    flexDirection: \"column\", \n    alignItems: \"center\", \n    marginTop: 40 \n};\n\nconst TransactionsScreen = (props) => {\n    return (\n        <Container  fluid style={style}>\n            <TransactionsWidget/>\n        </Container>\n    )\n}\n\nexport default withStoreBridge(withAppLayout(TransactionsScreen));","import { Form, Input, Button, Spin, Radio } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst radioBtnStyle = { display: \"flex\", flex: 1, alignSelf: \"stretch\", alignItems:\"center\" };\nconst radioGrpStyle = { width: \"100%\", display: \"flex\", flexDirection: \"row\", };\nconst FormItem = Form.Item;\n\nconst tokenOptions = [\n  {\n    label: \"ERC20\",\n    value: \"ERC20\"\n  },\n  {\n    label: \"BEP20\",\n    value: \"BEP20\"\n  },\n  {\n    label: \"TRC20\",\n    value: \"TRC20\"\n  },\n];\n\nconst formItemStyle = { \n  backgroundColor: \"#f8f8f8\", \n  marginTop:10,\n  borderRadius: 8, \n  paddingLeft: 10, \n  paddingRight: 10, \n  paddingTop: 5, \n  paddingBottom: 5 \n};\n\nexport const TransferTokenForm = ({ busy, onFinish }) => {\n  return (\n    <Form layout=\"vertical\" onFinish={onFinish} labelAlign=\"right\">\n\n      <FormItem rules={[\n        { message: \"This field is required\", required: true }\n      ]} label=\"Send:\" name=\"amount\" style={formItemStyle} labelAlign=\"right\">\n        <Input placeholder=\"Amount\" style={{ background: \"transparent\", border: \"none\", textAlign: \"end\" }} />\n      </FormItem>\n\n      <FormItem\n        rules={[\n          { message: \"This field is required\", required: true }\n        ]}\n        label=\"To:\" name=\"address\" style={formItemStyle} labelAlign=\"left\">\n        <Input placeholder=\"somereceiver.eth or eth-address\" style={{ marginTop: 10, background: \"transparent\", border: \"none\", textAlign: \"end\" }} />\n      </FormItem>\n\n      <FormItem\n        // rules={[\n        //   { message: \"This field is required\", required: true }\n        // ]}\n        label=\"Via:\" initialValue={tokenOptions[0].value} name=\"erc\" style={formItemStyle} labelAlign=\"right\">\n        <Radio.Group style={radioGrpStyle} defaultValue={tokenOptions[0].value} buttonStyle=\"solid\">\n          {tokenOptions.map((option, index) => <Radio.Button key={index} style={radioBtnStyle} value={option.value}>{option.label}</Radio.Button>)}\n        </Radio.Group>\n      </FormItem>\n\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        size=\"large\"\n        style={{ width: \"100%\", borderRadius: 8, marginTop: 10 }} disabled={busy}>\n        {busy ? <Spin indicator={<LoadingOutlined style={{ color: \"#fff\" }} spin />} /> : \"Transfer\"}\n      </Button>\n\n    </Form>\n  );\n};\n","import { useTransactionsStore } from \"../stores/tokenTransactions\";\nimport { payWithUSDTBEP, payWithUSDTERC } from \"../services/payments\";\nimport { toast } from \"react-toastify\";\nimport { TransferTokenForm } from \"./TransferTokenForm\";\nimport { cardStyle } from \"../styles\";\nimport useResponsive from \"../Responsive\";\n\n\n\nexport const TransferWidget = (props) => {\n  const store = useTransactionsStore();\n\n  const {isTabletOrMobile} = useResponsive();\n  const transferWidgetStyle = isTabletOrMobile?{...cardStyle, minWidth:\"100%\"} :cardStyle;\n\n  const handleTransaction = async (payment) => {\n    try {\n      store.setLoadingTrx(true);\n      const response = await payment();\n      if(response){\n        store.setLoadingTrx(false);\n        toast.success(\"Done. Status can be viewed in transaction section.\", { position: \"top-center\" });\n        // store.addTrx(response);\n      }\n      return response;\n    } catch (e) {\n      store.setLoadingTrx(false);\n      if (e.code === \"INVALID_ARGUMENT\") {\n        toast.error(\"Invalid Amount or Receipient Address\", { position: \"top-center\" });\n      }\n      if (e.code === -32603) {\n        toast.error(e.data.message, { position: \"top-center\" });\n      }\n      else {\n        toast.error(\"Tranfer initiation failed. Ensure your wallet is well-funded for this transaction\", { position: \"top-center\" });\n      }\n    }\n  };\n\n  const handleFinish = async (values) => {\n    const { address, amount, erc } = values;\n\n    switch (erc) {\n      case \"BEP20\":\n        const btrx = await handleTransaction(() => payWithUSDTBEP(amount, address));\n        if(btrx)\n          store.addTrx({...btrx, trxType:\"bep20\"});\n        break;\n\n      case \"ERC20\":\n        const etrx = await handleTransaction(() => payWithUSDTERC(amount, address));\n        if(etrx)\n          store.addTrx({...etrx, trxType:\"erc20\"});\n        break;\n\n      // case \"TRC20\":\n      //   console.log(await payWithUSDTTRC(amount, address));\n      //   break;\n      default:\n        toast.info(`Support for ${erc} is coming soon.`);\n    }\n  };\n\n  return (\n    <div style={transferWidgetStyle}>\n      <h3 style={{ margin: 0, fontWeight: \"bolder\" }}>Transfer</h3>\n      <p style={{ color: \"#666666\" }}>Send USDT tokens in an instant!</p>\n\n      <TransferTokenForm busy={store.getLoadingTrx()} onFinish={handleFinish} />\n    </div>\n  );\n};\n","import Container from \"../components/Container\";\nimport withAppLayout from \"../AppLayout\";\nimport { TransferWidget } from \"../components/TransferWidget\";\nimport withStoreBridge from \"../StoreBridge\";\n\nconst transferScreenStyle = { \n  display: \"flex\", \n  flexDirection: \"column\", \n  marginTop:40,\n  alignItems: \"center\" \n};\n\nconst TransferScreen = (props) => {\n  return (\n    <Container fluid style={transferScreenStyle}>\n      <TransferWidget />\n    </Container>\n  );\n};\n\n\nexport default withStoreBridge(withAppLayout(TransferScreen));\n","import { Redirect } from \"react-router-dom\";\nimport Index from \"./pages/Index\";\nimport TransactionsScreen from \"./pages/TransactionsScreen\";\nimport TransferScreen from \"./pages/TransferScreen\";\n\nexport default [\n    { path: \"/\", component: (props)=><Redirect to={\"/transfer\"}></Redirect>, exact: true },\n    { path: \"/transfer\", component: TransferScreen, exact: false },\n    { path: \"/transactions\", component: TransactionsScreen, exact: false },\n];\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport appRoutes from \"./appRoutes\";\n\nexport default (props) => {\n  return (\n      <BrowserRouter>\n        <Switch>\n          {appRoutes.map((route, index) => (\n            <Route key={route.path} {...route} />\n          ))}\n        </Switch>\n      </BrowserRouter>\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { TRX_LOCAL_STORE_KEY } from \"../constants/appData\";\nimport { APPEND_TRX, SET_CONNECTED, SET_LOADING, SET_LOADING_TRX, SET_WALLET } from \"./actions\";\n\nexport const transactionsReducer = (state = {\n    transactions: JSON.parse(localStorage.getItem(TRX_LOCAL_STORE_KEY)) ?? [],\n    loadingTrx: false,\n    loadingAddress: false,\n    connected: true,\n    wallet: {\n        balance: 0,\n        address: null\n    },\n}, action) => {\n    switch (action.type) {\n        case SET_LOADING_TRX:\n            const { loadingTrx } = action.payload;\n            return { ...state, loadingTrx };\n\n        case SET_LOADING:\n            const { loading } = action.payload;\n            return { ...state, loading };\n\n        case SET_CONNECTED:\n            const { connected } = action.payload;\n            return { ...state, connected };\n\n        case SET_WALLET:\n            const { wallet } = action.payload;\n            return { ...state, wallet };\n\n        case APPEND_TRX:\n            const { trx } = action.payload;\n            return { ...state, transactions: [trx, ...state.transactions] };\n\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    transactions: transactionsReducer\n})","import { call, takeLatest, putResolve } from \"redux-saga/effects\";\nimport { getWalletBalance } from \"../services/payments\";\nimport { FETCH_WALLET_BALANCE, setWallet } from \"./actions\";\n\nfunction* fetchWallet(action) {\n\n        const {address} = action.payload;\n    try{\n        const balance = yield call(getWalletBalance, [address]);\n        yield putResolve(setWallet({address, balance}))\n    }catch(e){\n        yield putResolve(setWallet({address, balance:\"N/A\"}))\n    }\n}\n\nexport default function* allSagas(){\n    yield takeLatest(FETCH_WALLET_BALANCE, fetchWallet);\n}","import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport combinedReducers from \"./reducers\";\nimport allSagas from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(combinedReducers,applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(allSagas);\n\nexport default store;","import AppRouter from \"./AppRouter\";\nimport TransactionStoreProvider from \"./stores/tokenTransactions\";\nimport \"./styles.css\";\nimport \"antd/dist/antd.css\"\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./stores/store\";\n\nexport default function App() {\n  return (\n    <>\n    <ToastContainer/>\n    <Provider store={store}>\n      <TransactionStoreProvider>\n        <AppRouter />\n      </TransactionStoreProvider>\n    </Provider>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.querySelector(\"#root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}